{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "BasicErrorMessageDTO": {
        "properties": {
          "description": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "double"
          }
        },
        "required": ["description", "message", "status"],
        "type": "object"
      },
      "FieldErrors": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "properties": {
            "value": {},
            "message": {
              "type": "string"
            }
          },
          "required": ["message"],
          "type": "object"
        }
      },
      "ValidationErrorMessageDTO": {
        "properties": {
          "fields": {
            "$ref": "#/components/schemas/FieldErrors"
          },
          "description": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "double"
          }
        },
        "required": ["description", "message", "status"],
        "type": "object"
      },
      "ErrorMessageDTO": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/BasicErrorMessageDTO"
          },
          {
            "$ref": "#/components/schemas/ValidationErrorMessageDTO"
          }
        ]
      },
      "Pick_User.Exclude_keyofUser._id-or-password__": {
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": ["email"],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_User._id-or-password_": {
        "$ref": "#/components/schemas/Pick_User.Exclude_keyofUser._id-or-password__",
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "StrippedUserDTO": {
        "$ref": "#/components/schemas/Omit_User._id-or-password_"
      },
      "CreateUserDTO": {
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": ["password", "email"],
        "type": "object"
      },
      "Todo": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "done": {
            "type": "boolean"
          }
        },
        "required": ["title"],
        "type": "object",
        "additionalProperties": false
      },
      "Pick_Todo.Exclude_keyofTodo._id__": {
        "properties": {
          "title": {
            "type": "string"
          },
          "done": {
            "type": "boolean"
          }
        },
        "required": ["title"],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_Todo._id_": {
        "$ref": "#/components/schemas/Pick_Todo.Exclude_keyofTodo._id__",
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "CreateTodoDTO": {
        "$ref": "#/components/schemas/Omit_Todo._id_"
      },
      "DeletedDTO": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "dooexid",
    "version": "0.0.0",
    "license": {
      "name": "MIT"
    },
    "contact": {}
  },
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "Register",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrippedUserDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["auth"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrippedUserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["auth"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "operationId": "GetAll",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  },
                  "type": "array"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": []
      },
      "post": {
        "operationId": "Create",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDTO"
              }
            }
          }
        }
      }
    },
    "/todos/{todoId}": {
      "get": {
        "operationId": "GetById",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "operationId": "Patch",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Todo"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDTO"
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Replace",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Todo"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDTO"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Remove",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessageDTO"
                }
              }
            }
          }
        },
        "tags": ["todos"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "/api"
    }
  ]
}
